#!/bin/sh
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

. /lib/functions.sh
. /lib/functions/network.sh
. /usr/lib/liboverthebox

# Global var containing the interfaces as json
INTERFACES=""

# shellcheck disable=SC2016
_get_packages() {
    # Only return the kernel for now
    local version=$(opkg info kernel | grep Version | cut -d' ' -f2)
    jq -n -c --arg kernel_version "$version" '[{ name: "kernel", version: $kernel_version }]'
}

_get_interface_json() {
    local dns gateway ifname interface interface ipaddr \
          macaddr metric multipath netmask proto if_label \
          traffic_control upload download
    config_get dns "$1" dns
    config_get gateway "$1" gateway
    config_get ifname "$1" ifname
    config_get interface "$1" interface
    config_get ipaddr "$1" ipaddr
    config_get macaddr "$1" macaddr
    config_get metric "$1" metric
    config_get multipath "$1" multipath
    config_get netmask "$1" netmask
    config_get proto "$1" proto
    config_get if_label "$1" label
    config_get traffic_control "$1" trafficcontrol
    config_get upload "$1" upload "0"
    config_get download "$1" download "0"

    # Get the public ip for the interface if the gateway is defined
    local public_ip
    if [ -n "$gateway" ]; then
        public_ip=$(curl -s --max-time 1 --interface "$ifname" ifconfig.ovh)
    fi

    local dns_servers
    if [ -n "$dns" ]; then
        # shellcheck disable=SC2016
        dns_servers=$(jq -n -c --arg dns "$dns" '$dns | split(" ")')
    else
        dns_servers='[]'
    fi

    # shellcheck disable=SC2016
    jq -n -c --argjson dns_servers "$dns_servers" \
             --arg gateway "$gateway" \
             --arg ifname "$ifname" \
             --arg interface "$interface" \
             --arg ipaddr "$ipaddr" \
             --arg macaddr "$macaddr" \
             --arg metric "$metric" \
             --arg multipath "$multipath" \
             --arg netmask "$netmask" \
             --arg proto "$proto" \
             --arg public_ip "$public_ip" \
             --arg if_label "$if_label" \
             --arg traffic_control "$traffic_control" \
             --arg upload "$upload" \
             --arg download "$download" \
             --arg name "$1" \
    '{
        public_ip: $public_ip,
        ip: $ipaddr,
        netmask: $netmask,
        gateway: $gateway,
        name: $name,
        label: $if_label,
        traffic_control: $traffic_control,
        upload: $upload|tonumber,
        download: $download|tonumber,
        dns_servers: $dns_servers,
        multipath_status: $multipath,
     }'
}

# shellcheck disable=SC2016
_get_interface() {
    local json=$(_get_interface_json "$1")
    [ -n "$OTB_DEBUG" ] && _log_debug "$(printf "\nInterface $1 properties:\n%s" "$(_pretty_print "$json")")"
    INTERFACES=$(jq -n -c --argjson interfaces "$INTERFACES" --argjson interface "$json" '$interfaces + [$interface]')
}

_properties() {
    INTERFACES="[]"
    config_load network
    config_foreach _get_interface interface ret

    local packages=$(_get_packages)

    # shellcheck disable=SC2016
    jq -n -c --argjson interfaces "$INTERFACES" \
             --argjson packages "$packages" \
    '{
        interfaces: $interfaces,
        packages: $packages,
     }'
}

otb-call POST "devices/${OTB_DEVICE_ID}/properties" --data "$(_properties)"
